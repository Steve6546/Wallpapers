@startuml azm_ai
!pragma useIntermediatePackages false

class azm_ai.action.agent.AgentEchoAction {
  content: str
  runnable: bool
  action: str
}
class azm_ai.action.agent.AgentFinishAction {
  runnable: bool
  action: str
}
class azm_ai.observation.AgentMessageObservation {
  role: str
  observation: str
}
class azm_ai.action.agent.AgentSummarizeAction {
  summary: str
  action: str
}
class azm_ai.action.agent.AgentThinkAction {
  thought: str
  runnable: bool
  action: str
}
class azm_ai.action.base.ExecutableAction {
}
class azm_ai.action.base.NotExecutableAction {
}
class azm_ai.observation.Observation {
  content: str
}
class azm_ai.action.base.Action {
}
class azm_ai.action.base.NullAction {
  action: str
}
class azm_ai.action.bash.CmdRunAction {
  command: str
  action: str
}
class azm_ai.action.browse.BrowseURLAction {
  url: str
  action: str
}
class azm_ai.observation.BrowserOutputObservation {
  url: str
  status_code: int
  error: bool
  observation: str
}
class azm_ai.action.fileop.FileReadAction {
  path: str
  action: str
}
class azm_ai.observation.FileReadObservation {
  path: str
  observation: str
}
class azm_ai.action.fileop.FileWriteAction {
  path: str
  contents: str
  action: str
}
class azm_ai.observation.FileWriteObservation {
  path: str
  observation: str
}
class azm_ai.action.tasks.AddTaskAction {
  parent: str
  goal: str
  subtasks: list
  action: str
}
class azm_ai.action.tasks.ModifyTaskAction {
  id: str
  state: str
  action: str
}
abstract class azm_ai.agent.Agent {
  _registry: Dict[str, Type[Agent]] {static}
  llm: LLM
  _complete: None
}
class azm_ai.llm.llm.LLM {
  model: None
  api_key: None
  base_url: None
  _debug_dir: None
  _debug_idx: None
  _debug_id: None
  _completion: None
}
class azm_ai.controller.agent_controller.AgentController {
  agent: Agent
  max_iterations: int
  workdir: str
  command_manager: CommandManager
  state: State
  plan: Plan
  callbacks: List[Callable]
}
class azm_ai.observation.AgentErrorObservation {
  observation: str
}
class azm_ai.controller.command_manager.CommandManager {
  directory: None
  shell: None
}
class azm_ai.observation.NullObservation {
  observation: str
}
class azm_ai.plan.Plan {
  main_goal: str {static}
  task: Task {static}
  main_goal: str
  task: None
}
class azm_ai.state.State {
  plan: Plan
  iteration: int
  history: List[Tuple[Action, Observation]]
  updated_info: List[Tuple[Action, Observation]]
}
class azm_ai.observation.CmdOutputObservation {
  command: str
  exit_code: int
  observation: str
}
class azm_ai.sandbox.sandbox.DockerInteractive {
  instance_id: None
  instance_id: None
  workspace_dir: None
  workspace_dir: None
  workspace_dir: None
  timeout: int
  base_container_image: None
  container_name: None
}
class azm_ai.observation.UserMessageObservation {
  role: str
  observation: str
}
class azm_ai.plan.Task {
  id: str {static}
  goal: str {static}
  parent: Task | None {static}
  subtasks: List[Task] {static}
  id: None
  id: None
  parent: None
  goal: str
  subtasks: None
}

class azm_ai.server.session.Session {
  websocket: None
  controller: Optional[AgentController]
  agent: Optional[Agent]
  agent_task: None
}

azm_ai.action.base.ExecutableAction <|-- azm_ai.action.agent.AgentEchoAction
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.agent.AgentFinishAction
azm_ai.observation.Observation <|-- azm_ai.observation.AgentMessageObservation
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.agent.AgentSummarizeAction
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.agent.AgentThinkAction
azm_ai.action.base.Action <|-- azm_ai.action.base.ExecutableAction
azm_ai.action.base.Action <|-- azm_ai.action.base.NotExecutableAction
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.base.NullAction
azm_ai.action.base.ExecutableAction <|-- azm_ai.action.bash.CmdRunAction
azm_ai.action.base.ExecutableAction <|-- azm_ai.action.browse.BrowseURLAction
azm_ai.observation.Observation <|-- azm_ai.observation.BrowserOutputObservation
azm_ai.action.base.ExecutableAction <|-- azm_ai.action.fileop.FileReadAction
azm_ai.observation.Observation <|-- azm_ai.observation.FileReadObservation
azm_ai.action.base.ExecutableAction <|-- azm_ai.action.fileop.FileWriteAction
azm_ai.observation.Observation <|-- azm_ai.observation.FileWriteObservation
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.tasks.AddTaskAction
azm_ai.action.base.NotExecutableAction <|-- azm_ai.action.tasks.ModifyTaskAction
azm_ai.agent.Agent *-- azm_ai.agent.Agent
azm_ai.agent.Agent *-- azm_ai.llm.llm.LLM
azm_ai.controller.agent_controller.AgentController *-- azm_ai.agent.Agent
azm_ai.observation.Observation <|-- azm_ai.observation.AgentErrorObservation
azm_ai.observation.Observation <|-- azm_ai.observation.NullObservation
azm_ai.plan.Plan *-- azm_ai.plan.Task
azm_ai.state.State *-- azm_ai.plan.Plan
azm_ai.state.State *-- azm_ai.observation.CmdOutputObservation
azm_ai.state.State *-- azm_ai.action.base.Action
azm_ai.state.State *-- azm_ai.observation.Observation
azm_ai.observation.Observation <|-- azm_ai.observation.CmdOutputObservation
azm_ai.observation.Observation <|-- azm_ai.observation.UserMessageObservation
azm_ai.plan.Task *-- azm_ai.plan.Task
azm_ai.server.session.Session *-- azm_ai.controller.agent_controller.AgentController
azm_ai.server.session.Session *-- azm_ai.agent.Agent
azm_ai.controller.agent_controller.AgentController -> azm_ai.state.State
azm_ai.controller.agent_controller.AgentController -> azm_ai.plan.Plan
azm_ai.controller.agent_controller.AgentController -> azm_ai.controller.command_manager.CommandManager
azm_ai.controller.command_manager.CommandManager -> azm_ai.sandbox.sandbox.DockerInteractive

footer Based on f3fda42; Generated by //py2puml//
@enduml
